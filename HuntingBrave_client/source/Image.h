
#pragma once



//******************************************************************************
//
//	グローバル関数
//
//******************************************************************************

//----------------------------------------------------------------------
//	定数
//----------------------------------------------------------------------
namespace IMAGE_MODE
{
	enum
	{
		NORMAL,				//	オリジナル描画
		ADOPTPARAM,			//	パラメータ採用
		ADD,				//	加算合成
		WAVE,				//	波紋
		FLASH,				//	点滅
		SCALING,			//	拡大縮小
		END,				//	終端
	};
}


//**********************************************************************
//
//	Imageクラス
//
//**********************************************************************

class Image
{
public:
	iex2DObj*	obj;

	//	パラメータ
	int		x, y, w, h;
	int		sx, sy, sw, sh;
	float	t;
	float	alpha;
	float	angle;
	POINT	p;
	Vector3 color;
	bool	renderflag;

	//	wave・scaling共通用パラメータ
	int	 plusScaleX;
	int	 plusScaleY;

	//	wave用パラメータ
	float	waveSpeed;
	float	waveAlpha;
	bool	waveState;
	bool	waveRenderflag;

	//	flashing用パラメータ
	float	flashingSpeed;
	float	flashingAlpha;
	float	flashingRenderflag;
	float	flashingParam;

	//	scaling用パラメータ
	float	scalingspeed;
	float	scalingAlpha;
	bool	scalingAlphaFlag;
	bool	scalingState;
	bool	scalingFlag;
	bool	scalingrenderflag;


public:
	Image();
	~Image();
	void	Initialize(char* image, int x, int y, int w, int h, int sx, int sy, int sw, int sh);
	//	更新・描画
	void	Update();		//	更新
	void	Render(int mode);		//	描画
	void	Render(int mode, int x, int y, int w, int h, int sx, int sy, int sw, int sh);

	//	波紋の設定(波紋出したいオブジェクト、波紋スピード)
	void	SetWave(float speed);

	//	波紋更新（波紋出したいオブジェクト、波紋大きさ、スタート時透明度）波紋終了時trueをかえす
	bool	WaveUpdate(int max_scale = 140, float max_alpha = 1.0f);

	//	点滅更新（点滅させたいオブジェクト、点滅スピード）
	void	FlashingUpdate(float speed = -1.0f);

};