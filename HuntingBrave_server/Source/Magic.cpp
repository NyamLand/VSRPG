
#include	"iextreme.h"
#include	"GameParam.h"
#include	"Magic.h"

//**************************************************************************
//
//	Magicクラス
//
//**************************************************************************

//----------------------------------------------------------------------------------------------
//	グローバル
//----------------------------------------------------------------------------------------------

#define	MAGIC_ACTIVE_TIME		0.5f
#define	MAGIC_SPEED		20.0f
#define	MAGIC_RADIUS	1.25f

//----------------------------------------------------------------------------------------------
//	初期化・解放
//----------------------------------------------------------------------------------------------

	//	コンストラクタ
	Magic::Magic( void ) : timer( nullptr ),
		pos( 0.0f, 0.0f, 0.0f ), startPos( 0.0f, 0.0f, 0.0f ), vec( 0.0f, 0.0f, 0.0f ),
		speed( MAGIC_SPEED ), radius( MAGIC_RADIUS ),
		mode( 0 ),
		isHit( false )
	{
	
	}

	//	デストラクタ
	Magic::~Magic( void )
	{
		if ( timer != nullptr )
		{
			delete	timer;	
			timer = nullptr;
		}
	}

	//	初期化
	bool	Magic::Initialize( int id, const Vector3& pos, const Vector3& vec )
	{
		this->id = id;
		this->pos = pos;
		this->startPos = pos;
		this->vec = vec;
		this->vec.Normalize();
		timer = new Timer();
		timer->Start( MAGIC_ACTIVE_TIME );

		return	true;
	}

//----------------------------------------------------------------------------------------------
//	更新
//----------------------------------------------------------------------------------------------

	//	更新
	bool	Magic::Update( void )
	{
		//	移動
		Move();

		//	タイマー更新
		bool	ret = !timer->Update();

		return	ret;
	}

//----------------------------------------------------------------------------------------------
//	動作関数
//----------------------------------------------------------------------------------------------

	//	移動
	void	Magic::Move( void )
	{
		pos = 
			startPos + vec * ( speed * timer->GetErapseTime() );
	}

	//	拡大
	void	Magic::Scaling( void )
	{
		
	}

//----------------------------------------------------------------------------------------------
//	情報設定
//----------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------
//	情報取得
//----------------------------------------------------------------------------------------------

	//	座標取得
	Vector3	Magic::GetPos( void )const
	{
		return	pos;
	}

	//	半径取得
	float			Magic::GetRadius( void )const
	{
		return	radius;
	}

	//	ID取得
	int			Magic::GetID( void )const
	{
		return	id;
	}





